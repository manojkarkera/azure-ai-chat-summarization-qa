{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction UploadDocumentComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"input\", 7);\n    i0.ɵɵlistener(\"change\", function UploadDocumentComponent_div_11_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onFileSelected($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UploadDocumentComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Response:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.aiResponse);\n  }\n}\nexport let UploadDocumentComponent = /*#__PURE__*/(() => {\n  class UploadDocumentComponent {\n    constructor(chatDocService) {\n      this.chatDocService = chatDocService;\n      this.requestType = 'chat'; // Default to Chat\n      this.userInput = '';\n      this.documentContent = '';\n      this.aiResponse = '';\n      this.selectedFile = null;\n    }\n    ngOnInit() {}\n    // Handle file selection\n    onFileSelected(event) {\n      const input = event.target;\n      if (input.files && input.files.length > 0) {\n        this.selectedFile = input.files[0];\n      }\n    }\n    sendRequest() {\n      if (this.requestType === 'chat') {\n        // For chat, just send text\n        this.chatDocService.sendTextRequest(this.requestType, this.userInput).subscribe({\n          next: response => {\n            this.aiResponse = response.response;\n          },\n          error: error => {\n            console.error('Error:', error);\n            this.aiResponse = 'Error processing request.';\n          }\n        });\n      } else if (this.selectedFile) {\n        // For file-based requests, send the file\n        this.chatDocService.sendFileRequest(this.requestType, this.selectedFile).subscribe({\n          next: response => {\n            this.aiResponse = response.response;\n          },\n          error: error => {\n            console.error('Error:', error);\n            this.aiResponse = 'Error processing request.';\n          }\n        });\n      }\n    }\n    static #_ = this.ɵfac = function UploadDocumentComponent_Factory(t) {\n      return new (t || UploadDocumentComponent)(i0.ɵɵdirectiveInject(i1.ChatDocService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UploadDocumentComponent,\n      selectors: [[\"app-upload-document\"]],\n      decls: 15,\n      vars: 6,\n      consts: [[1, \"radio-group\"], [\"type\", \"radio\", \"name\", \"type\", \"value\", \"chat\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"radio\", \"name\", \"type\", \"value\", \"summarize\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"radio\", \"name\", \"type\", \"value\", \"ask\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Enter your message\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [3, \"click\"], [\"type\", \"file\", 3, \"change\"]],\n      template: function UploadDocumentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\")(2, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function UploadDocumentComponent_Template_input_ngModelChange_2_listener($event) {\n            return ctx.requestType = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(3, \" Chat \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"label\")(5, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function UploadDocumentComponent_Template_input_ngModelChange_5_listener($event) {\n            return ctx.requestType = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(6, \" Summarization \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"label\")(8, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function UploadDocumentComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.requestType = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(9, \" Q&A \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"textarea\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function UploadDocumentComponent_Template_textarea_ngModelChange_10_listener($event) {\n            return ctx.userInput = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(11, UploadDocumentComponent_div_11_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelementStart(12, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function UploadDocumentComponent_Template_button_click_12_listener() {\n            return ctx.sendRequest();\n          });\n          i0.ɵɵtext(13, \"Submit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(14, UploadDocumentComponent_div_14_Template, 5, 1, \"div\", 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.requestType);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.requestType);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.requestType);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.userInput);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.requestType !== \"chat\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.aiResponse);\n        }\n      },\n      dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\".container[_ngcontent-%COMP%]{max-width:600px;margin:0 auto;padding:20px;border:1px solid #ddd;border-radius:8px;box-shadow:2px 2px 10px #0000001a}.radio-group[_ngcontent-%COMP%]{margin-bottom:10px}input[type=text][_ngcontent-%COMP%], input[type=file][_ngcontent-%COMP%]{display:block;width:100%;padding:8px;margin:10px 0}button[_ngcontent-%COMP%]{padding:10px 20px;border:none;background-color:#007bff;color:#fff;border-radius:5px;cursor:pointer}button[_ngcontent-%COMP%]:hover{background-color:#0056b3}.response[_ngcontent-%COMP%]{margin-top:20px;padding:10px;border:1px solid #ddd;border-radius:5px;background-color:#f9f9f9}\"]\n    });\n  }\n  return UploadDocumentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}