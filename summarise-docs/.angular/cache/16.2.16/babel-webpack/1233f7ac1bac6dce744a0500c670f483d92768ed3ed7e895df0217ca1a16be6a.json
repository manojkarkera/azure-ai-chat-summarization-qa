{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChatDocService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:7157/api/ProcessAIRequest'; // Change this to your Azure Function URL\n  }\n  // Send text-based request\n  sendTextRequest(type, message) {\n    const body = {\n      type,\n      message\n    };\n    return this.http.post(this.apiUrl, body);\n  }\n  // Send file-based request using FormData\n  sendFileRequest(type, file) {\n    const formData = new FormData();\n    formData.append('type', type);\n    formData.append('file', file);\n    return this.http.post(this.apiUrl, formData);\n  }\n  static #_ = this.ɵfac = function ChatDocService_Factory(t) {\n    return new (t || ChatDocService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChatDocService,\n    factory: ChatDocService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ChatDocService","constructor","http","apiUrl","sendTextRequest","type","message","body","post","sendFileRequest","file","formData","FormData","append","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\summarise-docs\\src\\services\\chat.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatDocService {\r\n  private apiUrl = 'http://localhost:7157/api/ProcessAIRequest'; // Change this to your Azure Function URL\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Send text-based request\r\n  sendTextRequest(type: 'chat', message: string): Observable<any> {\r\n    const body = { type, message };\r\n    return this.http.post<any>(this.apiUrl, body);\r\n  }\r\n\r\n  // Send file-based request using FormData\r\n  sendFileRequest(type: 'summarize' | 'ask', file: File): Observable<any> {\r\n    const formData = new FormData();\r\n    formData.append('type', type);\r\n    formData.append('file', file);\r\n\r\n    return this.http.post<any>(this.apiUrl, formData);\r\n  }\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,4CAA4C,CAAC,CAAC;EAExB;EAEvC;EACAC,eAAeA,CAACC,IAAY,EAAEC,OAAe;IAC3C,MAAMC,IAAI,GAAG;MAAEF,IAAI;MAAEC;IAAO,CAAE;IAC9B,OAAO,IAAI,CAACJ,IAAI,CAACM,IAAI,CAAM,IAAI,CAACL,MAAM,EAAEI,IAAI,CAAC;EAC/C;EAEA;EACAE,eAAeA,CAACJ,IAAyB,EAAEK,IAAU;IACnD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAER,IAAI,CAAC;IAC7BM,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,OAAO,IAAI,CAACR,IAAI,CAACM,IAAI,CAAM,IAAI,CAACL,MAAM,EAAEQ,QAAQ,CAAC;EACnD;EAAC,QAAAG,CAAA,G;qBAlBUd,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdnB,cAAc;IAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}